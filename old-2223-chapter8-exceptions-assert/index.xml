<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Traitement d&#39;erreurs (2022-22023) :: Cours de C&#43;&#43; - Niveau Master</title>
    <link>/old-2223-chapter8-exceptions-assert/index.html</link>
    <description>Dans ce court chapitre, nous allons présenter deux mécanismes permettant traiter les erreurs dans un programme : les assertions et les exceptions.</description>
    <generator>Hugo</generator>
    <language>fr</language>
    <atom:link href="/old-2223-chapter8-exceptions-assert/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Assertions</title>
      <link>/old-2223-chapter8-exceptions-assert/1-assertions/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/old-2223-chapter8-exceptions-assert/1-assertions/index.html</guid>
      <description>Types d’erreurs Lorsqu’une erreur se produit dans un logiciel, il s’agit soit d’une erreur de programmation, soit d’une erreur d’utilisation du logiciel.&#xA;Voici quelques exemples :&#xA;Un pointeur null a été déréférencé : erreur de programmation. Le programme a demandé à l’utilisateur de rentrer une image, mais celui-ci a fournit un fichier texte : erreur d’utilisation. On a écrit dans la case array.size() de array : erreur de programmation. L’utilisateur a entraîné “-34” alors que le programme attendait un entier positif : erreur d’utilisation.</description>
    </item>
    <item>
      <title>Exceptions</title>
      <link>/old-2223-chapter8-exceptions-assert/2-exceptions/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/old-2223-chapter8-exceptions-assert/2-exceptions/index.html</guid>
      <description>Qu’est-ce qu’une exception ? En C++, une exception sert à interrompre le flot classique d’exécution du programme lorsqu’un événement particulier se produit. Lorsqu’une exception est lancée, on sort du bloc courant, et on remonte la callstack autant que nécessaire, jusqu’à atteindre un bloc capable de traiter l’exception.&#xA;C’est donc un mécanisme extrêmement utilisé pour le traitement des erreurs (autant de programmation que d’utilisation), puisque l’erreur est remontée automatiquement jusqu’à l’endroit qui peut la traiter, sans avoir besoin de toucher au code des fonctions intermédiaires.</description>
    </item>
    <item>
      <title>Questionnaire !</title>
      <link>/old-2223-chapter8-exceptions-assert/test/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/old-2223-chapter8-exceptions-assert/test/index.html</guid>
      <description>C’est l’heure du test ! N’oubliez pas que vous pouvez utiliser Godbolt pour compiler et tester des petits bouts de code.&#xA;Bon courage à vous 🙂&#xA;Vous êtes : Votre adresse mail : Votre groupe : Initiaux 1 Initiaux 2 Alternants 1. A quoi sert une assertion ?&#xA;2. Pourquoi ne faut-il pas utiliser d’assertions pour traiter une erreur d’utilisation d’un logiciel ?&#xA;3. Ecrivez une assertion permettant de s’assurer qu’une variable name de type std::string n’est pas vide.</description>
    </item>
  </channel>
</rss>